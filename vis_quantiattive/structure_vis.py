import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np

data = {(0.5, 0): 0.03175426702743963, (0.5, 10): 0.024229435550480866, (0.5, 20): 0.009704722989134598, (0.5, 30): 0.00797091349217015, (0.5, 40): 0.00817172746916396, (0.5, 50): 0.008746184870951634, (1.5, 0): 0.05793757482256363, (1.5, 10): 0.04590703212264655, (1.5, 20): 0.02186909667553677, (1.5, 30): 0.013923493261192587, (1.5, 40): 0.011067962348191202, (1.5, 50): 0.010892518070539918, (2.0, 0): 0.06551348543523447, (2.0, 10): 0.052915029848615326, (2.0, 20): 0.027934440418376005, (2.0, 30): 0.01754905910069204, (2.0, 40): 0.013429421469218272, (2.0, 50): 0.012527446201800005, (2.5, 0): 0.07400097406428793, (2.5, 10): 0.05865535111692936, (2.5, 20): 0.03405706943485184, (2.5, 30): 0.02134158640452053, (2.5, 40): 0.01583687555503802, (2.5, 50): 0.014093175948853943, (3.0, 0): 0.08028295420218205, (3.0, 10): 0.06313374359160662, (3.0, 20): 0.040317490157009896, (3.0, 30): 0.025844909466695095, (3.0, 40): 0.018944916781038046, (3.0, 50): 0.0163794687571193, (3.5, 0): 0.08565646558460119, (3.5, 10): 0.06675328878496868, (3.5, 20): 0.044380316065381405, (3.5, 30): 0.02985644328030015, (3.5, 40): 0.02187471515903978, (3.5, 50): 0.01850396915730359, (4.0, 0): 0.09046284360406191, (4.0, 10): 0.06857947068477886, (4.0, 20): 0.04852618074611477, (4.0, 30): 0.03304410762275043, (4.0, 40): 0.024480044136525714, (4.0, 50): 0.02049469907997527, (4.5, 0): 0.09466240198715874, (4.5, 10): 0.07230982349078724, (4.5, 20): 0.05243844996489908, (4.5, 30): 0.03615865803769101, (4.5, 40): 0.02684693397157758, (4.5, 50): 0.02247872706367702, (5.0, 0): 0.09684262527287871, (5.0, 10): 0.07625867402100045, (5.0, 20): 0.05484732525234205, (5.0, 30): 0.038612625480669995, (5.0, 40): 0.028802611865103245, (5.0, 50): 0.02431593388588964, (5.5, 0): 0.09960694627269455, (5.5, 10): 0.07791000367074773, (5.5, 20): 0.05699749550093775, (5.5, 30): 0.040747728151525706, (5.5, 40): 0.030802710089778553, (5.5, 50): 0.026176417219466057, (6.0, 0): 0.10070748368035191, (6.0, 10): 0.08106137045483658, (6.0, 20): 0.05887706357769776, (6.0, 30): 0.043011491348885975, (6.0, 40): 0.032817255496384874, (6.0, 50): 0.028003697567011997, (6.5, 0): 0.10157341353487277, (6.5, 10): 0.08326435817972473, (6.5, 20): 0.06242783510706563, (6.5, 30): 0.045579823705813156, (6.5, 40): 0.034853072229610836, (6.5, 50): 0.02960455288057742, (7.0, 0): 0.1041269499970519, (7.0, 10): 0.08544110209829565, (7.0, 20): 0.06486174183479254, (7.0, 30): 0.04787688483686551, (7.0, 40): 0.03693327746367541, (7.0, 50): 0.03119770293056533, (7.5, 0): 0.10506938684029855, (7.5, 10): 0.08691383852366952, (7.5, 20): 0.06667192642023598, (7.5, 30): 0.04979340487794168, (7.5, 40): 0.038636415198013405, (7.5, 50): 0.03278743668688812, (8.0, 0): 0.10752907514140225, (8.0, 10): 0.08842255018543506, (8.0, 20): 0.06866236901639597, (8.0, 30): 0.05136915286867947, (8.0, 40): 0.04058586065050052, (8.0, 50): 0.03414233601179676, (8.5, 0): 0.10978066829451616, (8.5, 10): 0.09068732422547064, (8.5, 20): 0.07138032869746287, (8.5, 30): 0.05360985551353382, (8.5, 40): 0.04219719172333893, (8.5, 50): 0.035793804469099945, (9.0, 0): 0.11044861937778583, (9.0, 10): 0.09295207089272098, (9.0, 20): 0.07184758987547694, (9.0, 30): 0.054881373595824276, (9.0, 40): 0.04381462742668995, (9.0, 50): 0.03768593237559865, (9.5, 0): 0.11122168006672375, (9.5, 10): 0.09461450474201769, (9.5, 20): 0.07336163901440475, (9.5, 30): 0.05624557115083587, (9.5, 40): 0.0452428355516083, (9.5, 50): 0.03922294911699019, (10.0, 0): 0.11187786662924117, (10.0, 10): 0.09621702175101508, (10.0, 20): 0.07497379540101341, (10.0, 30): 0.05807024256690689, (10.0, 40): 0.04666279377820699, (10.0, 50): 0.041172091957127704, (10.5, 0): 0.11213401537658511, (10.5, 10): 0.09875647990923861, (10.5, 20): 0.0763366380436481, (10.5, 30): 0.05952162434603425, (10.5, 40): 0.04831587982134543, (10.5, 50): 0.0427511238452533, (11.0, 0): 0.11241265996426776, (11.0, 10): 0.10006859825681085, (11.0, 20): 0.07975433209398086, (11.0, 30): 0.060839489844722164, (11.0, 40): 0.049998452846446766, (11.0, 50): 0.04412546825419734, (11.5, 0): 0.11303632020734358, (11.5, 10): 0.09970826023946637, (11.5, 20): 0.0807849735804442, (11.5, 30): 0.06220816563059022, (11.5, 40): 0.0511952273250706, (11.5, 50): 0.045508533419258354, (12.0, 0): 0.11324550421989482, (12.0, 10): 0.10021642239197441, (12.0, 20): 0.0815094671063665, (12.0, 30): 0.06369232872258061, (12.0, 40): 0.052181738226310066, (12.0, 50): 0.04648424223389314, (12.5, 0): 0.11364417290989903, (12.5, 10): 0.10171381130382634, (12.5, 20): 0.08205843997606332, (12.5, 30): 0.06500658499535875, (12.5, 40): 0.053414744014541306, (12.5, 50): 0.047566317278297916, (13.0, 0): 0.11364977256111476, (13.0, 10): 0.10244845320889051, (13.0, 20): 0.08278023177568895, (13.0, 30): 0.06632991769499537, (13.0, 40): 0.05450107020906348, (13.0, 50): 0.048733272711219994, (13.5, 0): 0.11405623990340509, (13.5, 10): 0.1038242315036663, (13.5, 20): 0.08365956540017025, (13.5, 30): 0.06725026634724243, (13.5, 40): 0.055374139110031334, (13.5, 50): 0.049522396635966026}

new_data = []
for key in data:
    new_data.append((key[0], key[1], data[key]))
data = new_data
# Assuming x, y, z are evenly spaced and form a grid
#x = np.linspace(-5, 5, 100)
#y = np.linspace(-5, 5, 100)
#x, y = np.meshgrid(x, y)
#z = np.sin(np.sqrt(x**2 + y**2))


x, y, z = zip(*data)

# Creating a new figure
fig = plt.figure()

# Adding a subplot with 3D projection
ax = fig.add_subplot(111, projection='3d')

# Scatter plot
ax.scatter(x, y, z)

# Adding labels
ax.set_xlabel('classifier-free scale')
ax.set_ylabel('timesteps_control')
ax.set_zlabel('structure-similarity')

# Display the plot
plt.show()

